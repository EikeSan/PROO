/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package odin.view;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import odin.bo.DisciplinaBO;
import odin.bo.UsuarioBO;
import odin.dao.*;
import odin.model.Professor;
import odin.model.Usuario;

/**
 *
 * @author Francisco
 */
public class AlterarDisciplinaGUI extends javax.swing.JFrame {

    /**
     * Creates new form AlterarDisciplinaGUI
     */
    public AlterarDisciplinaGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        recebeNome = new javax.swing.JTextField();
        recebeCodigo = new javax.swing.JTextField();
        recebeCargaHoraria = new javax.swing.JTextField();
        botao_SalvarDisciplina = new javax.swing.JButton();
        botao_cancelarDisciplina = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        botao_vincularProfessor = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabelaNaoVinculados = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        tabelaVinculados = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        botao_desvincularProfessor = new javax.swing.JButton();
        botao_atualizarProfessores = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código da disciplina", "Nome da disciplina", "Carga horária"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        recebeCodigo.setEnabled(false);

        botao_SalvarDisciplina.setFont(new java.awt.Font("Tahoma", 1, 22)); // NOI18N
        botao_SalvarDisciplina.setText("Alterar");
        botao_SalvarDisciplina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botao_SalvarDisciplinaActionPerformed(evt);
            }
        });

        botao_cancelarDisciplina.setFont(new java.awt.Font("Tahoma", 1, 22)); // NOI18N
        botao_cancelarDisciplina.setText("Cancelar");
        botao_cancelarDisciplina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botao_cancelarDisciplinaActionPerformed(evt);
            }
        });

        jLabel1.setText("Lista de professores não vinculados: ");

        botao_vincularProfessor.setText("Vincular professor");
        botao_vincularProfessor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botao_vincularProfessorActionPerformed(evt);
            }
        });

        tabelaNaoVinculados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Código do professor", "CPF", "Nome do professor"
            }
        ));
        jScrollPane3.setViewportView(tabelaNaoVinculados);

        tabelaVinculados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "CPF", "Nome do professor"
            }
        ));
        jScrollPane4.setViewportView(tabelaVinculados);

        jLabel2.setText("Lista de professores vinculados: ");

        botao_desvincularProfessor.setText("Desvincular Professor");
        botao_desvincularProfessor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botao_desvincularProfessorActionPerformed(evt);
            }
        });

        botao_atualizarProfessores.setText("Atualizar Dados");
        botao_atualizarProfessores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botao_atualizarProfessoresActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(recebeCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(recebeNome, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(recebeCargaHoraria, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(70, 70, 70))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 686, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addComponent(botao_SalvarDisciplina)
                .addGap(51, 51, 51)
                .addComponent(botao_cancelarDisciplina)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 406, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(botao_vincularProfessor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(botao_desvincularProfessor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(botao_atualizarProfessores, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 406, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(recebeCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(recebeNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(recebeCargaHoraria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(botao_SalvarDisciplina)
                        .addComponent(botao_cancelarDisciplina)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(botao_atualizarProfessores)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(botao_vincularProfessor)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(botao_desvincularProfessor))))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public void gerarTabela(String[] campos, Object[] dados) {
        DefaultTableModel model = new DefaultTableModel(null, campos);
        jTable1.setModel(model);
        recebeCodigo.setText(dados[0].toString());
        recebeNome.setText(dados[1].toString());
        recebeCargaHoraria.setText(dados[2].toString());
    }
    /* public boolean isVinculado(String nome){
        
     }*/

    public void gerarTabelaProfessoresVinculados() {
        String[] nomesColunas = {"Código do professor", "CPF", "Nome do professor"};
        DefaultTableModel model = new DefaultTableModel(null, nomesColunas);
        ArrayList<Professor> listaProfessoresVinculados = new ArrayList<>();
        UsuarioBO usuarioBO = new UsuarioBO();
        int codigoDisciplina = Integer.parseInt(recebeCodigo.getText());
        try {
            listaProfessoresVinculados = usuarioBO.consultarProfessorVinculadoPorDisciplina(codigoDisciplina);
        } catch (SQLException ex) {
            Logger.getLogger(AdminViewGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        for (Professor novaLista : listaProfessoresVinculados) {
            model.addRow(new Object[]{novaLista.getCodigoProfessor(), novaLista.getCPFUsuario(), novaLista.getNomeUsuario()});
        }
        tabelaVinculados.setModel(model);
    }

    public boolean isVinculado(int codigoProfessor) {
        UsuarioBO usuarioBO = new UsuarioBO();
        boolean isAchou = false;
        ArrayList<Professor> listaProfessores = new ArrayList<>();
        int codigoDisciplina = Integer.parseInt(recebeCodigo.getText());
        try {
            listaProfessores = usuarioBO.consultarProfessorVinculadoPorDisciplina(codigoDisciplina);
        } catch (SQLException e) {
            Logger.getLogger(AdminViewGUI.class.getName()).log(Level.SEVERE, null, e);
        }
        for (Professor novaLista : listaProfessores) {
            if (novaLista.getCodigoProfessor() == codigoProfessor) {
                isAchou = true;
                break;
            }
        }
        return isAchou;
    }

    public void gerarTabelaProfessoresNaoVinculados() {
        String[] nomesColunas = {"Código do professor", "CPF", "Nome do professor"};
        DefaultTableModel model = new DefaultTableModel(null, nomesColunas);
        ArrayList<Professor> listaProfessores = new ArrayList<>();
        UsuarioBO usuarioBO = new UsuarioBO();
        try {
            listaProfessores = usuarioBO.consultarProfessor();
        } catch (SQLException ex) {
            Logger.getLogger(AdminViewGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        for (Professor novaLista : listaProfessores) {
            if (!isVinculado(novaLista.getCodigoProfessor())) {
                model.addRow(new Object[]{novaLista.getCodigoProfessor(), novaLista.getCPFUsuario(), novaLista.getNomeUsuario()});
            }
        }
        tabelaNaoVinculados.setModel(model);
    }
    private void botao_SalvarDisciplinaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botao_SalvarDisciplinaActionPerformed
        // TODO add your handling code here:
        DisciplinaBO disciplinaBO = new DisciplinaBO();
        int codigo = Integer.parseInt(recebeCodigo.getText());
        String nomeDisciplina = recebeNome.getText();
        int cargaHoraria = Integer.parseInt(recebeCargaHoraria.getText());

        try {
            disciplinaBO.alterarDisciplina(codigo, nomeDisciplina, cargaHoraria);
        } catch (SQLException ex) {
            Logger.getLogger(AlterarDisciplinaGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        JOptionPane.showMessageDialog(null, "Alteração bem sucedida!");
        dispose();
    }//GEN-LAST:event_botao_SalvarDisciplinaActionPerformed

    private void botao_cancelarDisciplinaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botao_cancelarDisciplinaActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_botao_cancelarDisciplinaActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
        gerarTabelaProfessoresNaoVinculados();
        gerarTabelaProfessoresVinculados();
    }//GEN-LAST:event_formComponentShown

    private void botao_vincularProfessorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botao_vincularProfessorActionPerformed
        // TODO add your handling code here:
        int i = tabelaNaoVinculados.getSelectedRow();
        if (i < 0) {
            JOptionPane.showMessageDialog(null, "Nenhuma linha selecionada!");
        }
        int codigoDisciplina = Integer.parseInt(recebeCodigo.getText().toString());
        int codigoProfessor = Integer.parseInt(tabelaNaoVinculados.getValueAt(i, 0).toString());
        UsuarioBO usuarioBO = new UsuarioBO();
        usuarioBO.vincularProfessor(codigoDisciplina, codigoProfessor);
        gerarTabelaProfessoresNaoVinculados();
        gerarTabelaProfessoresVinculados();
    }//GEN-LAST:event_botao_vincularProfessorActionPerformed

    private void botao_desvincularProfessorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botao_desvincularProfessorActionPerformed
        // TODO add your handling code here:
        UsuarioBO usuarioBO = new UsuarioBO();
        int codigoDisciplina = Integer.parseInt(recebeCodigo.getText());
        int i = tabelaVinculados.getSelectedRow();
        if (i < 0) {
            JOptionPane.showMessageDialog(null, "Nenhuma linha selecionada!");
        }
        int codigoProfessor = Integer.parseInt(tabelaVinculados.getValueAt(i, 0).toString());
        usuarioBO.desvincularProfessor(codigoProfessor, codigoDisciplina);
        gerarTabelaProfessoresNaoVinculados();
        gerarTabelaProfessoresVinculados();
    }//GEN-LAST:event_botao_desvincularProfessorActionPerformed

    private void botao_atualizarProfessoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botao_atualizarProfessoresActionPerformed
        // TODO add your handling code here:
        gerarTabelaProfessoresNaoVinculados();
        gerarTabelaProfessoresVinculados();
    }//GEN-LAST:event_botao_atualizarProfessoresActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AlterarDisciplinaGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AlterarDisciplinaGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AlterarDisciplinaGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AlterarDisciplinaGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AlterarDisciplinaGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botao_SalvarDisciplina;
    private javax.swing.JButton botao_atualizarProfessores;
    private javax.swing.JButton botao_cancelarDisciplina;
    private javax.swing.JButton botao_desvincularProfessor;
    private javax.swing.JButton botao_vincularProfessor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField recebeCargaHoraria;
    private javax.swing.JTextField recebeCodigo;
    private javax.swing.JTextField recebeNome;
    private javax.swing.JTable tabelaNaoVinculados;
    private javax.swing.JTable tabelaVinculados;
    // End of variables declaration//GEN-END:variables
}
